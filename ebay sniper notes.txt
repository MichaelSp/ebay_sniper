Need to get official ebay time and model internally (when getting initially, account for the time the request takes by measuring time before and after request, then adding that value to ebay's response)

Maintain the full abstraction to the ebay API request function, and build around it in the ebay_action model

Add support for tracking a bid:
Input item ID into form, will check the item's end bid time, minus ebay's current time, and save it into a variable called time_till_end. Start a new task for cron to execute at Time.now + time_till_end - small_offset (this is in local time). The task will start a thread to again measure the difference between the end bid time and ebay's current time. Sleep for that amount of time - the time it takes to execute a place_offer request to ebay's API, and then execute the place_offer request.


Use resque and cron. Set the task in the task queue

Use redis store to store session


Use twilio to notify users

MySQL2


Thoughts about calculating best bid: take average of all bid increases, check last bid increase. Find out how MaxBid works in "chinese" auctions







----------Things to install and implement---------------
MySQL2 - (user: levion@localhost pass: levion)
<<<<<<< HEAD
Devise - user auth (tie to ebay account)
=======
Devise - user auth
>>>>>>> 376ef231e335f2ce8519d3444d7f9c4c3454640b
Resque - task queueing
Resque Scheduler
Redis
Redis store - session storing (config/initializers/session-store.rb)
Twilio (text message alerts if item price has passed user defined threshold. prompt if user wants to increase)
Bootstrap - Twitter CSS




----------Sandbox info----------------
Item IDs
Harry Potter - 110101001019


#seller auth_token
"AgAAAA**AQAAAA**aAAAAA**n8gNUA**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4GhCZGGqQqdj6x9nY+seQ**194BAA**AAMAAA**RKYUL774WkhrRJGrHi1wS+VHDL2lOxG+Hoi9xx7Mm7jdbrh5BRv2UC93JN3Msn2EdwmnqhDwF2qxKFJYtY38YMMqKfpp+/GVB+WAta570T+LlCO5kKitdVTOal6EBhQRiMiKU9t7vGhTsi+ByQrShFpjH4Re3X6bQXNOGTjeWb1G+RdYOuH9NMELf7mVs6CBmWmhOdCuRow+Ekb/yVbGe1ZUfBcl55wYGI4AefPJTqoHgZuDEThrTeRs7TGFd3RaH5Cct+nMQrZRBEpUVeraUYEwCEct04qaRyfLm/EA4fvJcxp1znRr3BwGNwEam4OFeioQA4/bJMgmqU5eA8Unj8g7lLhYo2kWkspAG4aU5RkoFbMYctUDS2kSlQ3VtHJgmPwAHJVcPsWg2SO0B6Z+/SoPyToXiTFfNRSvgZXjxbzHmzringmRQ4yMwGdxDkD8rjFzTJTTCune42QH9WIqpjNPFwx+K3Y+V4qkPc2Q2b6VXQE/VOae0d5/4FrSQ8PMZB6SAbWSD/MfiX5ofpruOAHUGBG/9zpGXbPeESel2Jvv4DYpkRf0CLRiOAXrgW3PP1D1AnbHaVAR7PC/L9Lm0/BjJbWVlhKbaJyq/LIlv1JLwn4HInbWiR9XuXUGXshAGS+gZnGmzgNbAFllwT75opRiFdm2E1q4mOAntc9+1uviAYc5CxMs3igohPNut0JYdKDyQQyrGBOizIb1yM8kQRwfYiGRiTlyq/xrmkcjlK0+qM1dyFoaYaXvVQrh/sDc"


#buyer 1 auth_token
"AgAAAA**AQAAAA**aAAAAA**ffwOUA**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4GhCZGHpQidj6x9nY+seQ**194BAA**AAMAAA**nRHp2ssleJhryWIACS3o5NLnVCLDPHPrYPDOvb9LFoJ5/9X3Y7/g797fvhCSkGFJVL6HkzMSPR6cQrxXUQI+m3wumrBJYKrX/gLziBP13KJIeJnpFmr/iF0pSRNcP4IcJwbMkvCwejW8yoN5Y52amIpQGPyGwjYcoHP5zHw7YnSwA5nxNJ5JQSf7HSXRJwF0ITqpNoO/KAmjhWF05eTdDbUKShsDkKXCa0HLqeTSdMBO/1fxghqXWrMuEF+z9UybbkChe02kf3wpXgWvxxPPIXGGQAdleTwiUTs05tmQ++Tbu8uzxDoRYgnjb3BYIrldNtw+k2B+5XHpDmn53zgs8Kf8AXTjNAwBnh3H4FShcWd9Vz61xfNjYNTSobWinqgeaZ9hVezw5ESN6iz+fK8WzYLAfYGQvPi2QnB1WDHdNVM3LAc+0i6L3lvDe/YV21cBXcPLJKB39grYFcCbWRBL7WTC7Oigr9gX1rZGbWstjoiZsyXm4fgj+3k0olYWYbu+Ut8+vwxpYFkblvxpkFS/PFHBTiFA5JvYcLTW7Js/Tog/5usuo1N1/5oIV3TMqc9RV/KqNjkaZUve89iyeQKGDoLF8Xw5t9BHnVAoDh0S3+UjqEOkAncbHY+TgfqvHGO2hoBQW0kBzqZZw2ORYesnFS2jL0L9kQYXdSop4hHXD9OSTKrXgJkpVcTsfuRJip5haVEUNqi+4WdzbEuyvB+1AqXBV8a11FzH1eoZvWrqFRE5XtTi5qjPwc41/ngtO89U"


#buyer 2 auth_token
"AgAAAA**AQAAAA**aAAAAA**JwEPUA**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4GhCZGHpQqdj6x9nY+seQ**194BAA**AAMAAA**JUBbvNDChIaVw4CsP11T+Z4YIv4+XDR4Jsb0G/TezJjXyMaE4bBR92ZtZkhfuiOGNMGiSrKwrE/l0FbdXQLuMEJBIJubJYV0opjRMI1tm9HIxkK349SBZkk45E3P98jgY8llgL9NmMDNtEOKpaR8MZLyZ2q+hTDnfvxaP+WnEzbjzxLOKhhDpyAW7lPBgVps7V6Qu4aFLJ2xh3SfVGfXtBCSfMp7PWlPghVYXPKNCBn6ZziOYlso/5ucKfF7URKNBiev9Z0jBrVqnzO0vbbGDjJzcB5IQfVvSwBoMC5ljVTPXGMbxOsbao9SlY9iUzGWdV05YokVJUT4dTfxM9MzEsEs1RKonuuq3vIYOaeAtQxz7+WtG0nf4Npq8/c3RyehlLueUeuq43qmRwIROgrscWbA7aF3eYU+Cy/Jtvl68Ni2Zfa9GvuF9KvzWFaYd99mQmwd77EJX9MJgui7xzUioe6vi2KNOIMJ1mZKG/AtBDfUU4fWUy/6PsGJ9tR9VpQYRN6zV8szTu2X1lIgkYpBo7sjpSWp+OgJGdbY/oiMKep7dAFT++02xRBsZs3CsMzHRwpYXsDrk42ydu/kxaKC4ip3n0q1Vdt6s3uQE3bfs+0tTlOLOiDYsHjc5rL6W0h3q42kESO5hmfPgmx4YJmx7H94aeZmZriRVEHIueDysd2fij34GBvZGwUhyun9OwrF50eop9bAjlPd+k2EEC1sYRADeNbs5JQaZMyutI3XYffirfGiMPigmfu+mMJCkGGu"





---------------API REQUEST EXAMPLE----------------

def getTimeTest

@client ||= Savon::Client.new do
 wsdl.endpoint = "https://api.sandbox.ebay.com/wsapi?siteid=0&routing=beta&callname=GeteBayOfficialTime&version=423&appid=Leviona4d-c40e-454f-9d49-dd510693f96"
 wsdl.namespace = "urn:ebay:apis:eBLBaseComponents"
end


response = @client.request "GeteBayOfficialTimeRequest" do
 soap.body = { "Version" => "423" }
 soap.input = "GeteBayOfficialTimeRequest", { "xmlns" => "urn:ebay:apis:eBLBaseComponents" }
 soap.header = { "ebl:RequesterCredentials" => { "ebl:eBayAuthToken" => "AgAAAA**AQAAAA**aAAAAA**n8gNUA**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4GhCZGGqQqdj6x9nY+seQ**194BAA**AAMAAA**RKYUL774WkhrRJGrHi1wS+VHDL2lOxG+Hoi9xx7Mm7jdbrh5BRv2UC93JN3Msn2EdwmnqhDwF2qxKFJYtY38YMMqKfpp+/GVB+WAta570T+LlCO5kKitdVTOal6EBhQRiMiKU9t7vGhTsi+ByQrShFpjH4Re3X6bQXNOGTjeWb1G+RdYOuH9NMELf7mVs6CBmWmhOdCuRow+Ekb/yVbGe1ZUfBcl55wYGI4AefPJTqoHgZuDEThrTeRs7TGFd3RaH5Cct+nMQrZRBEpUVeraUYEwCEct04qaRyfLm/EA4fvJcxp1znRr3BwGNwEam4OFeioQA4/bJMgmqU5eA8Unj8g7lLhYo2kWkspAG4aU5RkoFbMYctUDS2kSlQ3VtHJgmPwAHJVcPsWg2SO0B6Z+/SoPyToXiTFfNRSvgZXjxbzHmzringmRQ4yMwGdxDkD8rjFzTJTTCune42QH9WIqpjNPFwx+K3Y+V4qkPc2Q2b6VXQE/VOae0d5/4FrSQ8PMZB6SAbWSD/MfiX5ofpruOAHUGBG/9zpGXbPeESel2Jvv4DYpkRf0CLRiOAXrgW3PP1D1AnbHaVAR7PC/L9Lm0/BjJbWVlhKbaJyq/LIlv1JLwn4HInbWiR9XuXUGXshAGS+gZnGmzgNbAFllwT75opRiFdm2E1q4mOAntc9+1uviAYc5CxMs3igohPNut0JYdKDyQQyrGBOizIb1yM8kQRwfYiGRiTlyq/xrmkcjlK0+qM1dyFoaYaXvVQrh/sDc" }, :attributes! => { "ebl:RequesterCredentials" => { "xmlns:ebl" => "urn:ebay:apis:eBLBaseComponents"} } }
end

return response.body
end