Make sure to change the currency based on get_item location (I think I got this to work, test currencies other than USD)

Use OutputSelector on get_item requests once I know all of the required field for the layout to shorten response time and server load

Ajax not working properly for edit auction pic cycle buttons. Add remote: true to link_to in _edit and retry
Redo buttons in edit auction page to cycle through pics

Center listing pictures vertically in auction index and edit

Change color of divider on auctions/edit, maybe add a different background color to listing details and snipe options to differentiate?

Fix update_auctions to only update online users' auctions using OutputSelector

Auction price being returned in Notification is not formatted to currency

Remove mechanize gem

Adding items uniqueness validation fails when auction status is deleted. Include "unless" check in validation and figure out how to alter the already existing entry's attributes on uniqueness fail.

Possible rare bug: If the user stays signed in and passes the auth_token_exp date, then all eBay API calls will fail without notice to user. Handle by checking exp date on calls?

Add search function that searches through existing auctions, matching for attributes such as Title (use a match to see if title contains like 80% of search query anywhere in it, so user doesn't have to spell it perfectly. Also, not case sensitive. Everything else should be exact.), Item ID, Max_bid.

Search eBay funcationality.

Instead of automatically reloading an active auction's data when it's clicked, make a button.

Just start like 50 workers for the auction_bidder job for now, then work on dynamic worker creation (with a ceiling)

# In AuctionBidder, use $redis.setex("ebaysniper:auction:#{auction.id}") = "#{Socket.gethostname}:#{Process.pid}" to create a key
# that expires in 6 minutes (or just longer than the job will need to complete). Then, in QueueAuctionBidder, get a collection of
# all active auctions that end in less than 5 minutes (or auctions that should have their own workers). Then, get a collection of
# all redis keys pertaining to bidder jobs that should be running by calling $redis.keys("ebaysniper:auction:*"). Then, loop through
# the collection of redis keys, checking the auction.id in the keys against every auction that should be running. If there are any
# auctions that should be running, but no keys exist pertaining to that auction, then Resque.Enqueue(AuctionBidder, auction.id)
If auction job failed, kill process by pid

Instead of using buttons to cycle through pics, just have thumbnails of pics under large pic as links.

Go through the other generated devise views and bootstrapify them.

Check if has_reserve_price == true, then if converted_reserve_price is higher than max bid. If yes, notify the user.

Override links that have already been clicked. Color shouldn't change.

Thumbnail hover background color shouldn't be black

Auction sorting by name, time left, current price, and max bid


Hours worked: 84.5 over first 2 weeks



----------Things to change once app is hosted elsewhere----------------

Twilio SMS routing URL
eBay consent form routing URL https://developer.ebay.com/DevZone/Account/AppSettings/Consent/?id=160565&s=1
Once app goes live, change all sandbox to production URLs



-------Processes to start----------
thin start --ssl -p 3001
  - Start web server with thin (for ssl support)

redis-server

rake resque:scheduler
  - Starts the resque scheduler

COUNT=4 QUEUES=queue_auction_bidder,auction_updater,notification_sender rake environment resque:work
COUNT=5 QUEUE=auction_bidder rake environment resque:workers
  - Starts the resque queue workers
  - Priority (auction_bidder, queue_auction_bidder, auction_updater, notification_sender)

resque-web lib/resque-web.rb
  - Opens the resque-web page in the browser with the resque-scheduler tabs included



----------UI Bugs----------------
Severe UI bugs on low resolution displays (phone). Fix with percentages and max_sizes.
Account-related links not vertically aligned. (fixed with padding, but not optimal)

