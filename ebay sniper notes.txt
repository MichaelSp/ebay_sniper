Ajax not working properly for auction thumbnails

Change color of divider on auctions/edit, maybe add a different background color to listing details and snipe options to differentiate?

Auction price being returned in Notification read_sms for info is not formatted to currency

When an auction fails verification of uniqueness, try to link to the pre-existing auction.

Find out how to force user signout and add to ebayaction request auth_token_exp check.

Search eBay funcationality.

Instead of automatically reloading an active auction's data when it's clicked, make a button.

Just start like 50 workers for the auction_bidder job for now, then work on dynamic worker creation (with a ceiling)

# In AuctionBidder, use $redis.setex("ebaysniper:auction:#{auction.id}") = "#{Socket.gethostname}:#{Process.pid}" to create a key
# that expires in 6 minutes (or just longer than the job will need to complete). Then, in QueueAuctionBidder, get a collection of
# all active auctions that end in less than 5 minutes (or auctions that should have their own workers). Then, get a collection of
# all redis keys pertaining to bidder jobs that should be running by calling $redis.keys("ebaysniper:auction:*"). Then, loop through
# the collection of redis keys, checking the auction.id in the keys against every auction that should be running. If there are any
# auctions that should be running, but no keys exist pertaining to that auction, then Resque.Enqueue(AuctionBidder, auction.id)
If auction job failed, kill process by pid

Instead of using buttons to cycle through pics, just have thumbnails of pics under large pic as links.

Go through the other generated devise views and bootstrapify them.

Check if has_reserve_price == true, then if converted_reserve_price is higher than max bid. If yes, notify the user.

Override links that have already been clicked. Color shouldn't change.

Thumbnail hover background color shouldn't be black

Workover auction bidder to perfect timing. Aim for under 3-4 seconds before auction end every time with no losses (if I'm the only bidder).

Maybe queue QueueAuctionUpdater every 3 minutes which splits up the active auctions into sub jobs that update them?

Refine searching to match for at least 3-5 characters in a row to be somewhere in the collection being searched.

Fix variable scoping. Used too many object variables that do not need to be accessed outside object (change to local)

Vertically center auction picture in auctions#edit

Change :confirm popups to modal dialogues.

Validation for user_has_phone_if_notify is only preventing auction save and displaying errors on create. Won't work on updating an existing auction.

"Listing Details" header shouldn't take the Refresh Auction button into account when calculating center. It's off to the left now.

Can link_to point to an object's method? Would probably be faster for Refresh Auctions.


Uncomment the lines in AuctionUpdater that notify user if they won/lost an auction. (Commented because I don't want 50 texts about my test auctions)



----------Things to change once app is hosted elsewhere----------------

Twilio SMS routing URL
eBay consent form routing URL https://developer.ebay.com/DevZone/Account/AppSettings/Consent/?id=160565&s=1
Once app goes live, change all sandbox to production URLs



-------Processes to start----------
thin start --ssl -p 3001
  - Start web server with thin (for ssl support)

redis-server

rake resque:scheduler
  - Starts the resque scheduler

COUNT=4 QUEUES=queue_auction_bidder,auction_updater,notification_sender rake environment resque:work
COUNT=5 QUEUE=auction_bidder rake environment resque:workers
  - Starts the resque queue workers
  - Priority (auction_bidder, queue_auction_bidder, auction_updater, notification_sender)

resque-web lib/resque-web.rb
  - Opens the resque-web page in the browser with the resque-scheduler tabs included



----------UI Bugs----------------
Severe UI bugs on low resolution displays (phone). Fix with percentages and max_sizes.
Account-related links not vertically aligned. (fixed with padding, but not optimal)

